require:
  - rubocop-performance
AllCops:
  Exclude:
    - vendor/**/*
    - Gemfile.lock
    - db/schema.rb
    - node_modules/**/*
    - tmp/**/*
    - test/dummy/db/schema.rb
    - gemfiles/**/*
  TargetRubyVersion: 2.5

# Department Bundler
Bundler/DuplicatedGem:
  Description: Checks for duplicate gem entries in Gemfile.
  Enabled: true

Bundler/InsecureProtocolSource:
  Description: The source `:gemcutter`, `:rubygems` and `:rubyforge` are deprecated because HTTP requests are insecure. Please change your source to 'https://rubygems.org' if possible, or 'http://rubygems.org' if not.
  Enabled: true

Bundler/OrderedGems:
  Description: Gems within groups in the Gemfile should be alphabetically sorted.
  Enabled: true

# Department Gemspec
Gemspec/OrderedDependencies:
  Description: Dependencies in the gemspec should be alphabetically sorted.
  Enabled: true

# Department Layout
Layout/AccessModifierIndentation:
  Description: Check indentation of private/protected visibility modifiers.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#indent-public-private-protected
  Enabled: false

Layout/ArrayAlignment:
  Description: Align the elements of an array literal if they span more than one line.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#align-multiline-arrays
  Enabled: true

Layout/HashAlignment:
  Description: Align the elements of a hash literal if they span more than one line.
  Enabled: true

Layout/ParameterAlignment:
  Description: Align the parameters of a method call if they span more than one line.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#no-double-indent
  Enabled: true

Layout/BlockEndNewline:
  Description: Put end statement of multiline block on its own line.
  Enabled: true

Layout/CaseIndentation:
  Description: Indentation of when in a case/when/[else/]end.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#indent-when-to-case
  Enabled: true

Layout/ClosingParenthesisIndentation:
  Description: Checks the indentation of hanging closing parentheses.
  Enabled: false

Layout/CommentIndentation:
  Description: Indentation of comments.
  Enabled: false

Layout/DotPosition:
  Description: Checks the position of the dot in multi-line method calls.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#consistent-multi-line-chains
  Enabled: true
  EnforcedStyle: trailing

Layout/ElseAlignment:
  Description: Align elses and elsifs correctly.
  Enabled: true

Layout/EmptyLineBetweenDefs:
  Description: Use empty lines between defs.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#empty-lines-between-methods
  Enabled: true

Layout/EmptyLines:
  Description: Don't use several empty lines in a row.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#two-or-more-empty-lines
  Enabled: true

Layout/EmptyLinesAroundAccessModifier:
  Description: Keep blank lines around access modifiers.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#empty-lines-around-access-modifier
  Enabled: false

Layout/EmptyLinesAroundBeginBody:
  Description: Keeps track of empty lines around begin-end bodies.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#empty-lines-around-bodies
  Enabled: false

Layout/EmptyLinesAroundBlockBody:
  Description: Keeps track of empty lines around block bodies.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#empty-lines-around-bodies
  Enabled: false

Layout/EmptyLinesAroundClassBody:
  Description: Keeps track of empty lines around class bodies.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#empty-lines-around-bodies
  Enabled: false

Layout/EmptyLinesAroundExceptionHandlingKeywords:
  Description: Keeps track of empty lines around exception handling keywords.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#empty-lines-around-bodies
  Enabled: false

Layout/EmptyLinesAroundModuleBody:
  Description: Keeps track of empty lines around module bodies.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#empty-lines-around-bodies
  Enabled: false

Layout/EmptyLinesAroundMethodBody:
  Description: Keeps track of empty lines around method bodies.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#empty-lines-around-bodies
  Enabled: false

Layout/EndOfLine:
  Description: Use Unix-style line endings.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#crlf
  Enabled: false

Layout/ExtraSpacing:
  Description: Do not use unnecessary spacing.
  Enabled: true

Layout/FirstArrayElementLineBreak:
  Description: Checks for a line break before the first element in a multi-line array.
  Enabled: false

Layout/FirstHashElementLineBreak:
  Description: Checks for a line break before the first element in a multi-line hash.
  Enabled: false

Layout/FirstMethodArgumentLineBreak:
  Description: Checks for a line break before the first argument in a multi-line method call.
  Enabled: false

Layout/FirstMethodParameterLineBreak:
  Description: Checks for a line break before the first parameter in a multi-line method parameter definition.
  Enabled: false

Layout/InitialIndentation:
  Description: Checks the indentation of the first non-blank non-comment line in a file.
  Enabled: false

Layout/FirstArgumentIndentation:
  Description: Checks the indentation of the first parameter in a method call.
  Enabled: false

Layout/IndentationConsistency:
  Description: Keep indentation straight.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#spaces-indentation
  Enabled: false

Layout/IndentationWidth:
  Description: Use 2 spaces for indentation.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#spaces-indentation
  Enabled: true

Layout/FirstArrayElementIndentation:
  Description: Checks the indentation of the first element in an array literal.
  Enabled: false

Layout/AssignmentIndentation:
  Description: Checks the indentation of the first line of the right-hand-side of a multi-line assignment.
  Enabled: true

Layout/FirstHashElementIndentation:
  Description: Checks the indentation of the first key in a hash literal.
  Enabled: false

Layout/HeredocIndentation:
  Description: This cops checks the indentation of the here document bodies.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#squiggly-heredocs
  Enabled: true

Layout/SpaceInLambdaLiteral:
  Description: Checks for spaces in lambda literals.
  Enabled: true

Layout/LeadingCommentSpace:
  Description: Comments should start with a space.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#hash-space
  Enabled: true

Layout/MultilineArrayBraceLayout:
  Description: Checks that the closing brace in an array literal is either on the same line as the last array element, or a new line.
  Enabled: true

Layout/MultilineAssignmentLayout:
  Description: Check for a newline after the assignment operator in multi-line assignments.
  StyleGuide: https://github.com/bbatsov/ruby-style-guid#indent-conditional-assignment
  Enabled: false

Layout/MultilineBlockLayout:
  Description: Ensures newlines after multiline block do statements.
  Enabled: true

Layout/MultilineHashBraceLayout:
  Description: Checks that the closing brace in a hash literal is either on the same line as the last hash element, or a new line.
  Enabled: true

Layout/MultilineMethodCallBraceLayout:
  Description: Checks that the closing brace in a method call is either on the same line as the last method argument, or a new line.
  Enabled: true

Layout/MultilineMethodCallIndentation:
  Description: Checks indentation of method calls with the dot operator that span more than one line.
  Enabled: true

Layout/MultilineMethodDefinitionBraceLayout:
  Description: Checks that the closing brace in a method definition is either on the same line as the last method parameter, or a new line.
  Enabled: true

Layout/MultilineOperationIndentation:
  Description: Checks indentation of binary operations that span more than one line.
  Enabled: false

Layout/EmptyLineAfterMagicComment:
  Description: Add an empty line after magic comments to separate them from code.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#separate-magic-comments-from-code
  Enabled: true

Layout/RescueEnsureAlignment:
  Description: Align rescues and ensures correctly.
  Enabled: false

Layout/SpaceBeforeFirstArg:
  Description: Checks that exactly one space is used between a method name and the first argument for method calls without parentheses.
  Enabled: true

Layout/SpaceAfterColon:
  Description: Use spaces after colons.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#spaces-operators
  Enabled: true

Layout/SpaceAfterComma:
  Description: Use spaces after commas.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#spaces-operators
  Enabled: true

Layout/SpaceAfterMethodName:
  Description: Do not put a space between a method name and the opening parenthesis in a method definition.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#parens-no-spaces
  Enabled: true

Layout/SpaceAfterNot:
  Description: Tracks redundant space after the ! operator.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#no-space-bang
  Enabled: false

Layout/SpaceAfterSemicolon:
  Description: Use spaces after semicolons.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#spaces-operators
  Enabled: true

Layout/SpaceBeforeBlockBraces:
  Description: Checks that the left block brace has or doesn't have space before it.
  Enabled: false

Layout/SpaceBeforeComma:
  Description: No spaces before commas.
  Enabled: false

Layout/SpaceBeforeComment:
  Description: Checks for missing space between code and a comment on the same line.
  Enabled: false

Layout/SpaceBeforeSemicolon:
  Description: No spaces before semicolons.
  Enabled: false

Layout/SpaceInsideBlockBraces:
  Description: Checks that block braces have or don't have surrounding space. For blocks taking parameters, checks that the left brace has or doesn't have trailing space.
  Enabled: false

Layout/SpaceAroundBlockParameters:
  Description: Checks the spacing inside and after block parameters pipes.
  Enabled: true

Layout/SpaceAroundEqualsInParameterDefault:
  Description: Checks that the equals signs in parameter default assignments have or don't have surrounding space depending on configuration.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#spaces-around-equals
  Enabled: true

Layout/SpaceAroundKeyword:
  Description: Use a space around keywords if appropriate.
  Enabled: true

Layout/SpaceAroundOperators:
  Description: Use a single space around operators.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#spaces-operators
  Enabled: true

Layout/SpaceInsideArrayPercentLiteral:
  Description: No unnecessary additional spaces between elements in %i/%w literals.
  Enabled: true

Layout/SpaceInsidePercentLiteralDelimiters:
  Description: No unnecessary spaces inside delimiters of %i/%w/%x literals.
  Enabled: true

Layout/SpaceInsideHashLiteralBraces:
  Description: Use spaces inside hash literal braces - or don't.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#spaces-operators
  Enabled: true

Layout/SpaceInsideParens:
  Description: No spaces after ( or before ).
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#no-spaces-braces
  Enabled: true

Layout/SpaceInsideRangeLiteral:
  Description: No spaces inside range literals.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#no-space-inside-range-literals
  Enabled: true

Layout/SpaceInsideStringInterpolation:
  Description: Checks for padding/surrounding spaces inside string interpolation.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#string-interpolation
  Enabled: false

Layout/IndentationStyle:
  Description: No hard tabs.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#spaces-indentation
  Enabled: false

Layout/TrailingEmptyLines:
  Description: Checks trailing blank lines and final newline.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#newline-eof
  Enabled: false

Layout/TrailingWhitespace:
  Description: Avoid trailing whitespace.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#no-trailing-whitespace
  Enabled: false

# Department Lint
Lint/AmbiguousBlockAssociation:
  Description: Checks for ambiguous block association with method when param passed without parentheses.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#syntax
  Enabled: false

Lint/AmbiguousOperator:
  Description: Checks for ambiguous operators in the first argument of a method invocation without parentheses.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#method-invocation-parens
  Enabled: true

Lint/AmbiguousRegexpLiteral:
  Description: Checks for ambiguous regexp literals in the first argument of a method invocation without parentheses.
  Enabled: true

Lint/AssignmentInCondition:
  Description: Don't use assignment in conditions.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#safe-assignment-in-condition
  Enabled: true

Layout/BlockAlignment:
  Description: Align block ends correctly.
  Enabled: true

Lint/BooleanSymbol:
  Description: Check for `:true` and `:false` symbols.
  Enabled: true

Lint/CircularArgumentReference:
  Description: Default values in optional keyword arguments and optional ordinal arguments should not refer back to the name of the argument.
  Enabled: true

Layout/ConditionPosition:
  Description: Checks for condition placed in a confusing position relative to the keyword.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#same-line-condition
  Enabled: true

Lint/Debugger:
  Description: Check for debugger calls.
  Enabled: true

Layout/DefEndAlignment:
  Description: Align ends corresponding to defs correctly.
  Enabled: true

Lint/DeprecatedClassMethods:
  Description: Check for deprecated class method calls.
  Enabled: true

Lint/DuplicateCaseCondition:
  Description: Do not repeat values in case conditionals.
  Enabled: true

Lint/DuplicateMethods:
  Description: Check for duplicate method definitions.
  Enabled: true

Lint/DuplicateHashKey:
  Description: Check for duplicate keys in hash literals.
  Enabled: true

Lint/EachWithObjectArgument:
  Description: Check for immutable argument given to each_with_object.
  Enabled: true

Lint/ElseLayout:
  Description: Check for odd code arrangement in an else block.
  Enabled: true

Lint/EmptyEnsure:
  Description: Checks for empty ensure block.
  Enabled: true
  AutoCorrect: false

Lint/EmptyExpression:
  Description: Checks for empty expressions.
  Enabled: true

Lint/EmptyInterpolation:
  Description: Checks for empty string interpolation.
  Enabled: true

Lint/EmptyWhen:
  Description: Checks for `when` branches with empty bodies.
  Enabled: true

Layout/EndAlignment:
  Description: Align ends correctly.
  Enabled: true

Style/EndBlock:
  Description: END blocks should not be placed inside method definitions.
  Enabled: true

Lint/EnsureReturn:
  Description: Do not use return in an ensure block.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#no-return-ensure
  Enabled: true

Lint/FloatOutOfRange:
  Description: Catches floating-point literals too large or small for Ruby to represent.
  Enabled: true

Lint/FormatParameterMismatch:
  Description: The number of parameters to format/sprint must match the fields.
  Enabled: true

Lint/SuppressedException:
  Description: Don't suppress exception.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#dont-hide-exceptions
  Enabled: true

Lint/ImplicitStringConcatenation:
  Description: Checks for adjacent string literals on the same line, which could better be represented as a single string literal.
  Enabled: true

Lint/IneffectiveAccessModifier:
  Description: Checks for attempts to use `private` or `protected` to set the visibility of a class method, which does not work.
  Enabled: true

Lint/InheritException:
  Description: Avoid inheriting from the `Exception` class.
  Enabled: true

Lint/InterpolationCheck:
  Description: Raise warning for interpolation in single q strs
  Enabled: true

Lint/LiteralAsCondition:
  Description: Checks of literals used in conditions.
  Enabled: true

Lint/LiteralInInterpolation:
  Description: Checks for literals used in interpolation.
  Enabled: true

Lint/Loop:
  Description: Use Kernel#loop with break rather than begin/end/until or begin/end/while for post-loop tests.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#loop-with-break
  Enabled: true

Lint/MultipleComparison:
  Description: Use `&&` operator to compare multiple value.
  Enabled: true

Lint/NestedMethodDefinition:
  Description: Do not use nested method definitions.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#no-nested-methods
  Enabled: true

Lint/NextWithoutAccumulator:
  Description: Do not omit the accumulator when calling `next` in a `reduce`/`inject` block.
  Enabled: true

Lint/NonLocalExitFromIterator:
  Description: Do not use return in iterator to cause non-local exit.
  Enabled: true

Lint/ParenthesesAsGroupedExpression:
  Description: Checks for method calls with a space before the opening parenthesis.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#parens-no-spaces
  Enabled: true

Lint/PercentStringArray:
  Description: Checks for unwanted commas and quotes in %w/%W literals.
  Enabled: true

Lint/PercentSymbolArray:
  Description: Checks for unwanted commas and colons in %i/%I literals.
  Enabled: true

Lint/RandOne:
  Description: Checks for `rand(1)` calls. Such calls always return `0` and most likely a mistake.
  Enabled: true

Lint/RedundantWithIndex:
  Description: Checks for redundant `with_index`.
  Enabled: true

Lint/RedundantWithObject:
  Description: Checks for redundant `with_object`.
  Enabled: true

Lint/RegexpAsCondition:
  Description: Do not use regexp literal as a condition. The regexp literal matches `$_` implicitly.
  Enabled: true

Lint/RequireParentheses:
  Description: Use parentheses in the method call to avoid confusion about precedence.
  Enabled: true

Lint/RescueException:
  Description: Avoid rescuing the Exception class.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#no-blind-rescues
  Enabled: true

Lint/RescueType:
  Description: Avoid rescuing from non constants that could result in a `TypeError`.
  Enabled: true

Lint/SafeNavigationChain:
  Description: Do not chain ordinary method call after safe navigation operator.
  Enabled: true

Lint/ScriptPermission:
  Description: Grant script file execute permission.
  Enabled: true

Lint/ShadowedException:
  Description: Avoid rescuing a higher level exception before a lower level exception.
  Enabled: true

Lint/ShadowingOuterLocalVariable:
  Description: Do not use the same name as outer local variable for block arguments or block local variables.
  Enabled: true

Lint/RedundantStringCoercion:
  Description: Checks for Object#to_s usage in string interpolation.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#no-to-s
  Enabled: true

Lint/UnderscorePrefixedVariableName:
  Description: Do not use prefix `_` for a variable that is used.
  Enabled: true

Lint/UnifiedInteger:
  Description: Use Integer instead of Fixnum or Bignum
  Enabled: true

Lint/RedundantRequireStatement:
  Description: Checks for unnecessary `require` statement.
  Enabled: true

Lint/RedundantSplatExpansion:
  Description: Checks for splat unnecessarily being called on literals
  Enabled: true

Lint/UnusedBlockArgument:
  Description: Checks for unused block arguments.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#underscore-unused-vars
  Enabled: true

Lint/UnusedMethodArgument:
  Description: Checks for unused method arguments.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#underscore-unused-vars
  Enabled: true

Lint/UnreachableCode:
  Description: Unreachable code.
  Enabled: true

Lint/UriEscapeUnescape:
  Description: '`URI.escape` method is obsolete and should not be used. Instead, use `CGI.escape`, `URI.encode_www_form` or `URI.encode_www_form_component` depending on your specific use case. Also `URI.unescape` method is obsolete and should not be used. Instead, use `CGI.unescape`, `URI.decode_www_form` or `URI.decode_www_form_component` depending on your specific use case.'
  Enabled: true

Lint/UriRegexp:
  Description: Use `URI::DEFAULT_PARSER.make_regexp` instead of `URI.regexp`.
  Enabled: true

Lint/UselessAccessModifier:
  Description: Checks for useless access modifiers.
  Enabled: true
  ContextCreatingMethods: []
  MethodCreatingMethods: []

Lint/UselessAssignment:
  Description: Checks for useless assignment to a local variable.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#underscore-unused-vars
  Enabled: true

Lint/UselessComparison:
  Description: Checks for comparison of something with itself.
  Enabled: true

Lint/UselessElseWithoutRescue:
  Description: Checks for useless `else` in `begin..end` without `rescue`.
  Enabled: true

Lint/ReturnInVoidContext:
  Description: Checks for return in void context.
  Enabled: true

Lint/UselessSetterCall:
  Description: Checks for useless setter call to a local variable.
  Enabled: true

Lint/Void:
  Description: Possible use of operator/literal/variable in void context.
  Enabled: true

# Department Metrics
Metrics/AbcSize:
  Description: A calculated magnitude based on number of assignments, branches, and conditions.
  Reference: http://c2.com/cgi/wiki?AbcMetric
  Enabled: true
  Max: 15

Metrics/BlockLength:
  Description: Avoid long blocks with many lines.
  Enabled: true
  Exclude:
    - Rakefile
    - "**/*.rake"
    - spec/**/*.rb
    - 'config/routes.rb'
    - 'config/environments/*.rb'

Metrics/BlockNesting:
  Description: Avoid excessive block nesting
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#three-is-the-number-thou-shalt-count
  Enabled: true
  Max: 4

Metrics/ClassLength:
  Description: Avoid classes longer than 100 lines of code.
  Enabled: true
  Max: 100

Metrics/CyclomaticComplexity:
  Description: A complexity metric that is strongly correlated to the number of test cases needed to validate a method.
  Enabled: true

Layout/LineLength:
  Description: Limit lines to 80 characters.
  StyleGuide: '#80-character-limits'
  Enabled: true
  Exclude:
    - 'db/**/*'

Metrics/MethodLength:
  Description: Avoid methods longer than 10 lines of code.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#short-methods
  Enabled: true
  Max: 6
  Exclude:
    - 'db/**/*'

Metrics/ModuleLength:
  Description: Avoid modules longer than 100 lines of code.
  Enabled: true
  Max: 100

Metrics/ParameterLists:
  Description: Avoid parameter lists longer than three or four parameters.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#too-many-params
  Enabled: false

Metrics/PerceivedComplexity:
  Description: A complexity metric geared towards measuring complexity for a human reader.
  Enabled: true

# Department Naming
Naming/AccessorMethodName:
  Description: Check the naming of accessor methods for get_/set_.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#accessor_mutator_method_names
  Enabled: false

Naming/AsciiIdentifiers:
  Description: Use only ascii symbols in identifiers.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#english-identifiers
  Enabled: false

Naming/ClassAndModuleCamelCase:
  Description: Use CamelCase for classes and modules.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#camelcase-classes
  Enabled: true

Naming/ConstantName:
  Description: Constants should use SCREAMING_SNAKE_CASE.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#screaming-snake-case
  Enabled: true

Naming/FileName:
  Description: Use snake_case for source file names.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#snake-case-files
  Enabled: true

Naming/HeredocDelimiterCase:
  Description: Use configured case for heredoc delimiters.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#heredoc-delimiters
  Enabled: true

Naming/HeredocDelimiterNaming:
  Description: Use descriptive heredoc delimiters.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#heredoc-delimiters
  Enabled: true

Naming/MethodName:
  Description: Use the configured style when naming methods.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#snake-case-symbols-methods-vars
  Enabled: false

Naming/PredicateName:
  Description: Check the names of predicate methods.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#bool-methods-qmark
  Enabled: true

Naming/BinaryOperatorParameterName:
  Description: When defining binary operators, name the argument other.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#other-arg
  Enabled: true

Naming/VariableName:
  Description: Use the configured style when naming variables.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#snake-case-symbols-methods-vars
  Enabled: true

Naming/VariableNumber:
  Description: Use the configured style when numbering variables.
  Enabled: true

Naming/MemoizedInstanceVariableName:
  Enabled: true
  Exclude:
    - app/controllers/*.rb
# Department Performance
Performance/Caller:
  Description: Use `caller(n..n)` instead of `caller`.
  Enabled: true

Performance/Casecmp:
  Description: Use `casecmp` rather than `downcase ==`, `upcase ==`, `== downcase`, or `== upcase`..
  Reference: https://github.com/JuanitoFatas/fast-ruby#stringcasecmp-vs-stringdowncase---code
  Enabled: true

Performance/CaseWhenSplat:
  Description: Place `when` conditions that use splat at the end of the list of `when` branches.
  Enabled: true

Performance/Count:
  Description: Use `count` instead of `select...size`, `reject...size`, `select...count`, `reject...count`, `select...length`, and `reject...length`.
  SafeAutoCorrect: true
  Enabled: true

Performance/Detect:
  Description: Use `detect` instead of `select.first`, `find_all.first`, `select.last`, and `find_all.last`.
  Reference: 'https://github.com/JuanitoFatas/fast-ruby#enumerabledetect-vs-enumerableselectfirst-code'
  SafeAutoCorrect: true
  Enabled: true

Performance/DoubleStartEndWith:
  Description: Use `str.{start,end}_with?(x, ..., y, ...)` instead of `str.{start,end}_with?(x, ...) || str.{start,end}_with?(y, ...)`.
  Enabled: true

Performance/EndWith:
  Description: Use `end_with?` instead of a regex match anchored to the end of a string.
  Reference: https://github.com/JuanitoFatas/fast-ruby#stringmatch-vs-stringstart_withstringend_with-code-start-code-end
  AutoCorrect: false
  Enabled: true

Performance/FixedSize:
  Description: Do not compute the size of statically sized objects except in constants
  Enabled: true

Performance/FlatMap:
  Description: Use `Enumerable#flat_map` instead of `Enumerable#map...Array#flatten(1)` or `Enumberable#collect..Array#flatten(1)`
  Reference: https://github.com/JuanitoFatas/fast-ruby#enumerablemaparrayflatten-vs-enumerableflat_map-code
  Enabled: true
  EnabledForFlattenWithoutParams: false

Performance/RangeInclude:
  Description: Use `Range#cover?` instead of `Range#include?`.
  Reference: https://github.com/JuanitoFatas/fast-ruby#cover-vs-include-code
  Enabled: true

Performance/RedundantBlockCall:
  Description: Use `yield` instead of `block.call`.
  Reference: https://github.com/JuanitoFatas/fast-ruby#proccall-vs-yield-code
  Enabled: true

Performance/RedundantMatch:
  Description: Use `=~` instead of `String#match` or `Regexp#match` in a context where the returned `MatchData` is not needed.
  Enabled: true

Performance/RedundantMerge:
  Description: Use Hash#[]=, rather than Hash#merge! with a single key-value pair.
  Reference: https://github.com/JuanitoFatas/fast-ruby#hashmerge-vs-hash-code
  Enabled: true

Style/RedundantSortBy:
  Description: Use `sort` instead of `sort_by { |x| x }`.
  Enabled: true

Performance/RegexpMatch:
  Description: Use `match?` instead of `Regexp#match`, `String#match`, `Symbol#match`, `Regexp#===`, or `=~` when `MatchData` is not used.
  Enabled: true

Performance/ReverseEach:
  Description: Use `reverse_each` instead of `reverse.each`.
  Reference: https://github.com/JuanitoFatas/fast-ruby#enumerablereverseeach-vs-enumerablereverse_each-code
  Enabled: true

Style/Sample:
  Description: Use `sample` instead of `shuffle.first`, `shuffle.last`, and `shuffle[Integer]`.
  Reference: https://github.com/JuanitoFatas/fast-ruby#arrayshufflefirst-vs-arraysample-code
  Enabled: true

Performance/Size:
  Description: Use `size` instead of `count` for counting the number of elements in `Array` and `Hash`.
  Reference: https://github.com/JuanitoFatas/fast-ruby#arraycount-vs-arraysize-code
  Enabled: true

Performance/CompareWithBlock:
  Description: Use `sort_by(&:foo)` instead of `sort { |a, b| a.foo <=> b.foo }`.
  Enabled: true

Performance/StartWith:
  Description: Use `start_with?` instead of a regex match anchored to the beginning of a string.
  Reference: https://github.com/JuanitoFatas/fast-ruby#stringmatch-vs-stringstart_withstringend_with-code-start-code-end
  AutoCorrect: false
  Enabled: true

Performance/StringReplacement:
  Description: Use `tr` instead of `gsub` when you are replacing the same number of characters. Use `delete` instead of `gsub` when you are deleting characters.
  Reference: https://github.com/JuanitoFatas/fast-ruby#stringgsub-vs-stringtr-code
  Enabled: true

Performance/TimesMap:
  Description: Checks for .times.map calls.
  AutoCorrect: false
  Enabled: true

Performance/UnfreezeString:
  Description: Use unary plus to get an unfrozen string literal.
  Enabled: true

Performance/UriDefaultParser:
  Description: Use `URI::DEFAULT_PARSER` instead of `URI::Parser.new`.
  Enabled: true

# Department Security
Security/Eval:
  Description: The use of eval represents a serious security risk.
  Enabled: true

Security/JSONLoad:
  Description: Prefer usage of `JSON.parse` over `JSON.load` due to potential security issues. See reference for more information.
  Reference: http://ruby-doc.org/stdlib-2.3.0/libdoc/json/rdoc/JSON.html#method-i-load
  Enabled: true
  AutoCorrect: false

Security/MarshalLoad:
  Description: Avoid using of `Marshal.load` or `Marshal.restore` due to potential security issues. See reference for more information.
  Reference: http://ruby-doc.org/core-2.3.3/Marshal.html#module-Marshal-label-Security+considerations
  Enabled: true

Security/YAMLLoad:
  Description: Prefer usage of `YAML.safe_load` over `YAML.load` due to potential security issues. See reference for more information.
  Reference: https://ruby-doc.org/stdlib-2.3.3/libdoc/yaml/rdoc/YAML.html#module-YAML-label-Security
  Enabled: true

Security/Open:
  Exclude:
    - db/migrate/*.rb
# Department Style
Style/Alias:
  Description: Use alias instead of alias_method.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#alias-method
  Enabled: false

Style/AndOr:
  Description: Use &&/|| instead of and/or.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#no-and-or-or
  Enabled: true

Style/ArrayJoin:
  Description: Use Array#join instead of Array#*.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#array-join'
  Enabled: false

Style/AsciiComments:
  Description: Use only ascii symbols in comments.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#english-comments
  Enabled: false

Style/Attr:
  Description: Checks for uses of Module#attr.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#attr
  Enabled: true

Style/AutoResourceCleanup:
  Description: Suggests the usage of an auto resource cleanup version of a method (if available).
  Enabled: false

Style/BeginBlock:
  Description: Avoid the use of BEGIN blocks.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#no-BEGIN-blocks
  Enabled: true

Style/BarePercentLiterals:
  Description: Checks if usage of %() or %Q() matches configuration.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#percent-q-shorthand
  Enabled: true

Style/BlockComments:
  Description: Do not use block comments.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#no-block-comments
  Enabled: false

Style/BlockDelimiters:
  Description: Avoid using {...} for multi-line blocks (multiline chaining is always ugly). Prefer {...} over do...end for single-line blocks.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#single-line-blocks
  Enabled: true

Style/CaseEquality:
  Description: Avoid explicit use of the case equality operator(===).
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#no-case-equality
  Enabled: false

Style/CharacterLiteral:
  Description: Checks for uses of character literals.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#no-character-literals
  Enabled: false

Style/ClassAndModuleChildren:
  Description: Checks style of children classes and modules.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#namespace-definition
  Enabled: false

Style/ClassCheck:
  Description: Enforces consistent use of `Object#is_a?` or `Object#kind_of?`.
  Enabled: true

Style/ClassMethods:
  Description: Use self when defining module/class methods.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#def-self-class-methods
  Enabled: false

Style/ClassVars:
  Description: Avoid the use of class variables.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#no-class-vars
  Enabled: false

Style/CollectionMethods:
  Description: Preferred collection methods.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#map-find-select-reduce-size
  Enabled: false

Style/ColonMethodCall:
  Description: 'Do not use :: for method call.'
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#double-colons
  Enabled: true

Style/CommandLiteral:
  Description: Use `` or %x around command literals.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#percent-x
  Enabled: false

Style/CommentAnnotation:
  Description: Checks formatting of special comments (TODO, FIXME, OPTIMIZE, HACK, REVIEW).
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#annotate-keywords
  Enabled: false

Style/CommentedKeyword:
  Description: Do not place comments on the same line as certain keywords.
  Enabled: false

Style/ConditionalAssignment:
  Description: Use the return value of `if` and `case` statements for assignment to a variable and variable comparison instead of assigning that variable inside of each branch.
  Enabled: true

Style/Copyright:
  Description: Include a copyright notice in each file before any code.
  Enabled: false

Style/DateTime:
  Description: Use Date or Time over DateTime.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#date--time
  Enabled: false

Style/DefWithParentheses:
  Description: Use def with parentheses when there are arguments.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#method-parens
  Enabled: true

Style/Dir:
  Description: Use the `__dir__` method to retrieve the canonicalized absolute path to the current file.
  Enabled: true

Style/Documentation:
  Description: Document classes and non-namespace modules.
  Enabled: false
  Exclude:
    - 'spec/**/*'
    - 'test/**/*'

Style/DocumentationMethod:
  Description: Public methods.
  Enabled: false
  Exclude:
    - 'spec/**/*'
    - 'test/**/*'

Style/DoubleNegation:
  Description: Checks for uses of double negation (!!).
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#no-bang-bang
  Enabled: true

Style/EachForSimpleLoop:
  Description: Use `Integer#times` for a simple loop which iterates a fixed number of times.
  Enabled: true

Style/EachWithObject:
  Description: Prefer `each_with_object` over `inject` or `reduce`.
  Enabled: false

Style/EmptyElse:
  Description: Avoid empty else-clauses.
  Enabled: true

Style/EmptyCaseCondition:
  Description: Avoid empty condition in case statements.
  Enabled: true

Style/EmptyLiteral:
  Description: Prefer literals to Array.new/Hash.new/String.new.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#literal-array-hash
  Enabled: false

Style/EmptyMethod:
  Description: Checks the formatting of empty method definitions.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#no-single-line-methods
  Enabled: false

Style/EndBlock:
  Description: Avoid the use of END blocks.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#no-END-blocks
  Enabled: false

Style/Encoding:
  Description: Use UTF-8 as the source file encoding.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#utf-8
  Enabled: true

Style/EvenOdd:
  Description: Favor the use of Integer#even? && Integer#odd?
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#predicate-methods
  Enabled: true

Style/FrozenStringLiteralComment:
  Description: Add the frozen_string_literal comment to the top of files to help transition from Ruby 2.3.0 to Ruby 3.0.
  Enabled: true

Lint/FlipFlop:
  Description: Checks for flip flops
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#no-flip-flops
  Enabled: true

Style/For:
  Description: Checks use of for or each in multiline loops.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#no-for-loops
  Enabled: true

Style/FormatString:
  Description: Enforce the use of Kernel#sprintf, Kernel#format or String#%.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#sprintf
  Enabled: false

Style/FormatStringToken:
  Description: Use a consistent style for format string tokens.
  Enabled: true

Style/GlobalVars:
  Description: Do not introduce global variables.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#instance-vars
  Reference: http://www.zenspider.com/Languages/Ruby/QuickRef.html
  Enabled: true

Style/GuardClause:
  Description: Check for conditionals that can be replaced with guard clauses
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#no-nested-conditionals
  Enabled: true

Style/HashSyntax:
  Description: 'Prefer Ruby 1.9 hash syntax { a: 1, b: 2 } over 1.8 syntax { :a => 1, :b => 2 }.'
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#hash-literals
  Enabled: true

Style/IfInsideElse:
  Description: Finds if nodes inside else, which can be converted to elsif.
  Enabled: true

Style/IfUnlessModifier:
  Description: Favor modifier if/unless usage when you have a single-line body.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#if-as-a-modifier
  Enabled: true

Style/IfUnlessModifierOfIfUnless:
  Description: Avoid modifier if/unless usage on conditionals.
  Enabled: true

Style/IfWithSemicolon:
  Description: Do not use if x; .... Use the ternary operator instead.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#no-semicolon-ifs
  Enabled: true

Style/IdenticalConditionalBranches:
  Description: Checks that conditional statements do not have an identical line at the end of each branch, which can validly be moved out of the conditional.
  Enabled: true

Style/InfiniteLoop:
  Description: Use Kernel#loop for infinite loops.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#infinite-loop
  Enabled: true

Style/InlineComment:
  Description: Avoid trailing inline comments.
  Enabled: false

Style/InverseMethods:
  Description: Use the inverse method instead of `!.method` if an inverse method is defined.
  Enabled: true

Style/ImplicitRuntimeError:
  Description: Use `raise` or `fail` with an explicit exception class and message, rather than just a message.
  Enabled: false

Style/Lambda:
  Description: Use the new lambda literal syntax for single-line blocks.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#lambda-multi-line
  Enabled: true

Style/LambdaCall:
  Description: Use lambda.call(...) instead of lambda.(...).
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#proc-call
  Enabled: false

Style/LineEndConcatenation:
  Description: Use \ instead of + or << to concatenate two string literals at line end.
  Enabled: true

Style/MethodCallWithoutArgsParentheses:
  Description: Do not use parentheses for method calls with no arguments.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#method-invocation-parens
  Enabled: true

Style/MethodCallWithArgsParentheses:
  Description: Use parentheses for method calls with arguments.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#method-invocation-parens
  Enabled: false

Style/MethodCalledOnDoEndBlock:
  Description: Avoid chaining a method call on a do...end block.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#single-line-blocks
  Enabled: false

Style/MethodDefParentheses:
  Description: Checks if the method definitions have or don't have parentheses.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#method-parens
  Enabled: true

Style/MethodMissingSuper:
  Enabled: true

Style/MissingRespondToMissing:
  Enabled: true

Style/MinMax:
  Description: Use `Enumerable#minmax` instead of `Enumerable#min` and `Enumerable#max` in conjunction.'
  Enabled: true

Style/MissingElse:
  Description: Require if/case expressions to have an else branches. If enabled, it is recommended that Style/UnlessElse and Style/EmptyElse be enabled. This will conflict with Style/EmptyElse if Style/EmptyElse is configured to style "both"
  Enabled: false
  EnforcedStyle: both
  SupportedStyles:
    - if
    - case
    - both

Style/MixinGrouping:
  Description: Checks for grouping of mixins in `class` and `module` bodies.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#mixin-grouping
  Enabled: true

Style/ModuleFunction:
  Description: Checks for usage of `extend self` in modules.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#module-function
  Enabled: true

Style/MultilineBlockChain:
  Description: Avoid multi-line chains of blocks.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#single-line-blocks
  Enabled: false

Style/MultilineIfThen:
  Description: Do not use then for multi-line if/unless.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#no-then
  Enabled: true

Style/MultilineIfModifier:
  Description: Only use if/unless modifiers on single line statements.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#no-multiline-if-modifiers
  Enabled: true

Style/MultilineMemoization:
  Description: Wrap multiline memoizations in a `begin` and `end` block.
  Enabled: true

Style/MultilineTernaryOperator:
  Description: 'Avoid multi-line ?: (the ternary operator); use if/unless instead.'
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#no-multiline-ternary
  Enabled: true

Style/MultipleComparison:
  Description: Avoid comparing a variable with multiple items in a conditional, use Array#include? instead.
  Enabled: true

Style/MutableConstant:
  Description: Do not assign mutable objects to constants.
  Enabled: true

Style/NegatedIf:
  Description: Favor unless over if for negative conditions (or control flow or).
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#unless-for-negatives
  Enabled: true

Style/NegatedWhile:
  Description: Favor until over while for negative conditions.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#until-for-negatives
  Enabled: true

Style/NestedModifier:
  Description: Avoid using nested modifiers.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#no-nested-modifiers
  Enabled: true

Style/NestedParenthesizedCalls:
  Description: Parenthesize method calls which are nested inside the argument list of another parenthesized method call.
  Enabled: true

Style/NestedTernaryOperator:
  Description: Use one expression per branch in a ternary operator.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#no-nested-ternary
  Enabled: true

Style/Next:
  Description: Use `next` to skip iteration instead of a condition at the end.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#no-nested-conditionals
  Enabled: true

Style/NilComparison:
  Description: 'Prefer x.nil? to x == nil.'
  StyleGuide: '#predicate-methods'
  Enabled: true

Style/NonNilCheck:
  Description: Checks for redundant nil checks.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#no-non-nil-checks
  Enabled: true

Style/Not:
  Description: Use ! instead of not.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#bang-not-not
  Enabled: true

Style/NumericLiterals:
  Description: Add underscores to large numeric literals to improve their readability.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#underscores-in-numerics
  Enabled: true

Style/NumericLiteralPrefix:
  Description: Use smallcase prefixes for numeric literals.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#numeric-literal-prefixes
  Enabled: true

Style/NumericPredicate:
  Description: Checks for the use of predicate- or comparison methods for numeric comparisons.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#predicate-methods
  AutoCorrect: false
  Enabled: true

Style/OneLineConditional:
  Description: Favor the ternary operator(?:) over if/then/else/end constructs.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#ternary-operator
  Enabled: false

Style/OptionalArguments:
  Description: Checks for optional arguments that do not appear at the end of the argument list
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#optional-arguments
  Enabled: false

Style/OptionHash:
  Description: Don't use option hashes when you can use keyword arguments.
  Enabled: false

Style/OrAssignment:
  Description: Recommend usage of double pipe equals (||=) where applicable.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#double-pipe-for-uninit
  Enabled: true

Style/ParallelAssignment:
  Description: Check for simple usages of parallel assignment. It will only warn when the number of variables matches on both sides of the assignment.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#parallel-assignment
  Enabled: false

Style/ParenthesesAroundCondition:
  Description: Don't use parentheses around the condition of an if/unless/while.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#no-parens-around-condition
  Enabled: true

Style/PercentLiteralDelimiters:
  Description: Use `%`-literal delimiters consistently
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#percent-literal-braces
  Enabled: true
  PreferredDelimiters:
    default: ()
    '%i': '()'
    '%I': '()'
    '%r': '{}'
    '%w': '()'
    '%W': '()'

Style/PercentQLiterals:
  Description: Checks if uses of %Q/%q match the configured preference.
  Enabled: true

Style/PerlBackrefs:
  Description: Avoid Perl-style regex back references.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#no-perl-regexp-last-matchers
  Enabled: false

Style/PreferredHashMethods:
  Description: Checks use of `has_key?` and `has_value?` Hash methods.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#hash-key
  Enabled: true

Style/Proc:
  Description: Use proc instead of Proc.new.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#proc
  Enabled: true

Style/RaiseArgs:
  Description: Checks the arguments passed to raise/fail.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#exception-class-messages
  Enabled: false

Style/RedundantBegin:
  Description: Don't use begin blocks when they are not needed.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#begin-implicit
  Enabled: true

Style/RedundantConditional:
  Description: Don't return true/false from a conditional.
  Enabled: true

Style/RedundantException:
  Description: Checks for an obsolete RuntimeException argument in raise/fail.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#no-explicit-runtimeerror
  Enabled: true

Style/RedundantFreeze:
  Description: Checks usages of Object#freeze on immutable objects.
  Enabled: true

Style/RedundantParentheses:
  Description: Checks for parentheses that seem not to serve any purpose.
  Enabled: true

Style/RedundantReturn:
  Description: Don't use return where it's not required.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#no-explicit-return
  Enabled: true

Style/RedundantSelf:
  Description: Don't use self where it's not needed.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#no-self-unless-required
  Enabled: true

Style/RegexpLiteral:
  Description: Use / or %r around regular expressions.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#percent-r
  Enabled: false

Style/RescueModifier:
  Description: Avoid using rescue in its modifier form.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#no-rescue-modifiers
  Enabled: false

Style/RescueStandardError:
  Description: Avoid rescuing without specifying an error class.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#no-blind-rescues'
  Enabled: true

Style/ReturnNil:
  Description: Use return instead of return nil.
  Enabled: false

Style/SafeNavigation:
  Description: This cop transforms usages of a method call safeguarded by a check for the existance of the object to safe navigation (`&.`).
  Enabled: true

Style/SelfAssignment:
  Description: Checks for places where self-assignment shorthand should have been used.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#self-assignment
  Enabled: true

Style/Semicolon:
  Description: Don't use semicolons to terminate expressions.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#no-semicolon
  Enabled: true

Style/Send:
  Description: Prefer `Object#__send__` or `Object#public_send` to `send`, as `send` may overlap with existing methods.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#prefer-public-send
  Enabled: false

Style/SignalException:
  Description: Checks for proper usage of fail and raise.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#prefer-raise-over-fail
  Enabled: true

Style/SingleLineBlockParams:
  Description: Enforces the names of some block params.
  Enabled: false

Style/SingleLineMethods:
  Description: Avoid single-line methods.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#no-single-line-methods
  Enabled: false

Style/SpecialGlobalVars:
  Description: Avoid Perl-style global variables.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#no-cryptic-perlisms
  Enabled: false

Style/StabbyLambdaParentheses:
  Description: Check for the usage of parentheses around stabby lambda arguments.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#stabby-lambda-with-args
  Enabled: true

Style/StderrPuts:
  Description: Use `warn` instead of `$stderr.puts`.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#warn
  Enabled: true

Style/StringLiterals:
  Description: Checks if uses of quotes match the configured preference.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#consistent-string-literals
  EnforcedStyle: double_quotes
  Enabled: true

Style/StringLiteralsInInterpolation:
  Description: Checks if uses of quotes inside expressions in interpolated strings match the configured preference.
  Enabled: true

Style/StringMethods:
  Description: Checks if configured preferred methods are used over non-preferred.
  Enabled: false

Style/StructInheritance:
  Description: Checks for inheritance from Struct.new.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#no-extend-struct-new
  Enabled: false

Style/SymbolArray:
  Description: Use %i or %I for arrays of symbols.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#percent-i
  Enabled: true

Style/SymbolLiteral:
  Description: Use plain symbols instead of string symbols when possible.
  Enabled: false

Style/SymbolProc:
  Description: Use symbols as procs instead of blocks when possible.
  Enabled: false

Style/TernaryParentheses:
  Description: Checks for use of parentheses around ternary conditions.
  Enabled: true

Style/MixinUsage:
  Description: Checks that `include`, `extend` and `prepend` exists at the top level.
  Enabled: true

Style/TrailingCommaInArguments:
  Description: Checks for trailing comma in argument lists.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#no-trailing-params-comma'
  Enabled: false

Style/TrailingCommaInArrayLiteral:
  Description: Checks for trailing comma in array and hash literals.'
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#no-trailing-array-commas
  Enabled: false

Style/TrailingCommaInHashLiteral:
  Description: Checks for trailing comma in array and hash literals.'
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#no-trailing-array-commas
  Enabled: false

Style/TrivialAccessors:
  Description: Prefer attr_* methods to trivial readers/writers.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#attr_family
  Enabled: false

Style/UnlessElse:
  Description: Do not use unless with else. Rewrite these with the positive case first.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#no-else-with-unless
  Enabled: true

Style/RedundantCapitalW:
  Description: Checks for %W when interpolation is not needed.
  Enabled: false

Style/RedundantInterpolation:
  Description: Checks for strings that are just an interpolated expression.
  Enabled: true

Style/RedundantPercentQ:
  Description: Checks for %q/%Q when single quotes or double quotes would do.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#percent-q
  Enabled: false

Style/TrailingUnderscoreVariable:
  Description: Checks for the usage of unneeded trailing underscores at the end of parallel variable assignment.
  AllowNamedUnderscoreVariables: true
  Enabled: false

Style/VariableInterpolation:
  Description: Don't interpolate global, instance and class variables directly in strings.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#curlies-interpolate
  Enabled: true

Style/WhenThen:
  Description: Use when x then ... for one-line cases.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#one-line-cases
  Enabled: true

Style/WhileUntilDo:
  Description: Checks for redundant do after while or until.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#no-multiline-while-do
  Enabled: true

Style/WhileUntilModifier:
  Description: Favor modifier while/until usage when you have a single-line body.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#while-as-a-modifier
  Enabled: true

Style/WordArray:
  Description: Use %w or %W for arrays of words.
  StyleGuide: https://github.com/bbatsov/ruby-style-guide#percent-w
  Enabled: true

Style/YodaCondition:
  Description: Do not use literals as the first operand of a comparison.
  Reference: https://en.wikipedia.org/wiki/Yoda_conditions
  Enabled: true

Style/ZeroLengthPredicate:
  Description: Use #empty? when testing for objects of length 0.
  Enabled: true
